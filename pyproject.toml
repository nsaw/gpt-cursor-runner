[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gpt-cursor-runner"
version = "0.2.0"
description = "A production-ready CLI tool and webhook microservice for handling GPT-generated code patches"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "GPT-Cursor Runner Team", email = "team@gpt-cursor-runner.dev"}
]
keywords = ["gpt", "cursor", "patches", "webhook", "slack", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Monitoring",
]
dependencies = [
    "flask>=2.3.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "markdownlint-cli>=0.37.0",
]
dashboard = [
    "plotly>=5.0.0",
    "dash>=2.0.0",
    "psutil>=5.9.0",
]

[project.scripts]
gpt-cursor-runner = "gpt_cursor_runner.main:main"

[project.urls]
Homepage = "https://github.com/nsaw/gpt-cursor-runner"
Repository = "https://github.com/nsaw/gpt-cursor-runner"
Documentation = "https://github.com/nsaw/gpt-cursor-runner#readme"
Issues = "https://github.com/nsaw/gpt-cursor-runner/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["gpt_cursor_runner*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "tests/",
    "*.md",
    "docs/",
    "logs/",
    "patches/",
    "assets/",
    "public/",
    "server/",
    "slack/",
    "scripts/",
    "tasks/",
    "runner/",
    "init/",
    "quarantine/",
    "Free/",
    "Pro/",
    "Team/",
    "Enterprise/",
    "config/",
    "data/",
    "state/",
    "temp/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.markdownlint]
MD032 = false
MD013 = {line_length = 120, code_blocks = false, tables = false}
MD033 = false
MD041 = false
MD002 = false
MD026 = {punctuation = ".,;:!"} 