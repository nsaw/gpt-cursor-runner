# Ignore archives and junk
*.zip
*.tar.gz
*.log
*.bak
.DS_Store
.env
*.log*

# Ignore node_modules and build output
node_modules/
dist/
build/
*archive*
*cache/*
.github/
__pycache__/

# Ignore test snapshots
**/__snapshots__/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, uncomment the following line:
#.idea/

# Project-specific
patches/
*.bak_*
patch-log.json
node_modules/

# Ignore intake and backup directories
_gpt5intake/
_backups/

# Cursor
.cursor/
.cursor-cache/
.env
.env.*
*.env

# Credentials and Secrets
*.key
*.pem
*.p12
*.pfx
*.crt
*.cert
*.token
*.secret
*.auth
*.cred
*.pass
*.pwd

# ngrok
.ngrok2/
ngrok.yml
ngrok.conf

# Slack
.slack/
slack-tokens.json
slack-config.json

# GitHub
.github-token
github-token.txt

# Fly.io
.fly/
fly.toml.local
fly.toml.backup

# Cloudflare
.cloudflare/
cloudflare-tunnel.json

# 1Password CLI
.op/
.oprc

# Logs with sensitive data
logs/*.log
logs/*.error
logs/*.pid

# Temporary files with credentials
temp/
tmp/
*.tmp
*.temp
tmp_*
test_*

# IDE files that might contain credentials
.vscode/settings.json
.idea/workspace.xml
*.swp
*.swo
*~

# OS files
.DS_Store
Thumbs.db

# Additional security entries
*.env
*.env.local
*.env.production
*.env.staging
*.env.development
secrets.json
config/secrets.json
credentials.json
auth.json
tokens.json
*.jwt
*.jws
*.jwe

# Runtime files
.crash.lock
.cursor-failed-blocks.json
.cursor-patch-log.json
.runner.locked
runner.state.json

# Backup files
*.backup
*.bak
*.old
*.orig

# ML model files (large binary files)
models/*.pkl
models/*.joblib
models/*.h5
models/*.onnx

# Performance data
performance_data/
metrics_data/
ml_data/

# Cache directories
.cache/
cache/
__pycache__/
*.pyc

# Ghost shadow watcher output files
.ghost-md-status.json
.last-md-write.log
.route-error.log
.log-audit-warnings.log
.ghost-relay.log
.patch-runner.log
