name: Deploy to Railway

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint . --ext .js,.ts,.tsx --max-warnings=20

      - name: Run TypeScript check
        run: npx tsc --noEmit

      - name: Run tests
        run: npm test -- --watchAll=false

  inline-node-e-guard-and-shebang-guard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run validation checks
        run: |
          node scripts/g2o/inline_node_e_guard.js --paths scripts/g2o,scripts/ci,scripts/metrics,scripts/validate,config --mode fail-on-violation
          node scripts/ci/shebang_guard_precommit_once.js scripts/ci/*.js scripts/g2o/*.js

  deploy:
    runs-on: ubuntu-latest
    needs: [tests, inline-node-e-guard-and-shebang-guard]
    if: ${{ github.ref == 'refs/heads/main' && needs.tests.result == 'success' && needs.inline-node-e-guard-and-shebang-guard.result == 'success' }}
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Railway
        uses: bervProject/railway-deploy@v1.0.0
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: gpt-cursor-runner
