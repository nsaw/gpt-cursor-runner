const stateManager = require('../utils/stateManager');

module.exports = async function handleDashboard(req, res) {
  const { user_name } = req.body;
  console.log('‚ö°Ô∏è /dashboard triggered by:', user_name);
  
  try {
    const state = await stateManager.getState();
    const dashboardUrl = state.public_url || process.env.DASHBOARD_URL || 'https://gpt-cursor-runner.fly.dev/dashboard';
    
    const dashboardText = `
üìä *GPT-Cursor Runner Dashboard*

üîó *Dashboard URL:* ${dashboardUrl}

*Quick Access:*
‚Ä¢ Status: \`/status\`
‚Ä¢ Roadmap: \`/roadmap\`
‚Ä¢ Theme Status: \`/theme-status\`

*Runner Controls:*
‚Ä¢ Pause/Resume: \`/pause-runner\` / \`/continue-runner\`
‚Ä¢ Toggle Auto: \`/toggle-runner-auto\`
‚Ä¢ Lock/Unlock: \`/lock-runner\` / \`/unlock-runner\`

*Patch Management:*
‚Ä¢ Approve: \`/patch-approve\`
‚Ä¢ Revert: \`/patch-revert\`
‚Ä¢ Preview: \`/patch-preview\`

*Emergency Controls:*
‚Ä¢ Kill Runner: \`/kill-runner\`
‚Ä¢ Restart: \`/restart-runner\`
‚Ä¢ Crash Alert: \`/alert-runner-crash\`

*System Info:*
‚Ä¢ Environment: ${process.env.NODE_ENV || 'development'}
‚Ä¢ Server: ${process.env.PUBLIC_URL || 'https://gpt-cursor-runner.fly.dev'}
‚Ä¢ Timestamp: ${new Date().toLocaleString()}
    `.trim();

    res.send(dashboardText);
  } catch (error) {
    console.error('Error getting dashboard info:', error);
    res.send(`‚ùå Error getting dashboard info: ${error.message}`);
  }
};