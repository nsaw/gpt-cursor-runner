const stateManager = require('../utils/stateManager');
const patchManager = require('../utils/patchManager');

module.exports = async function handleLogPhaseStatus(req, res) {
  const { user_name } = req.body;
  console.log("⚡️ /log-phase-status triggered by:", user_name);
  
  try {
    const [state, patchStats, recentPatches] = await Promise.all([
      stateManager.getState(),
      patchManager.getPatchStats(),
      patchManager.listPatches(10)
    ]);

    const phaseStatus = `
📊 *Phase Status Report*

*Current Phase:* Phase 2 - Enhanced Automation
*Status:* ${state.paused ? '⏸️ Paused' : '🟢 Active'}
*Mode:* ${state.autoMode ? '🤖 Auto' : '👤 Manual'}

*Patch Statistics:*
• Total: ${patchStats.total}
• Approved: ${patchStats.approved} (${patchStats.successRate}%)
• Pending: ${patchStats.pending}
• Failed: ${patchStats.failed}
• Reverted: ${patchStats.reverted}

*Recent Activity:*
${recentPatches.slice(0, 5).map(patch => 
  `• ${patch.status === 'approved' ? '✅' : patch.status === 'failed' ? '❌' : '⏳'} ${patch.file || 'Unknown'} (${patch.status})`
).join('\n')}

*System Health:*
• Runner: ${state.lockdown ? '🔒 Locked' : '🔓 Unlocked'}
• Crash Fence: ${state.crashFence ? '🚧 Active' : '✅ Clear'}
• Auto Mode: ${state.autoMode ? 'Enabled' : 'Disabled'}

*Generated By:* ${user_name}
*Timestamp:* ${new Date().toLocaleString()}
    `.trim();

    res.send(phaseStatus);
  } catch (error) {
    console.error('Error getting phase status:', error);
    res.send(`❌ Error getting phase status: ${error.message}`);
  }
};