#!/bin/bash

# Auto Apply Cursor Patches Script
# Monitors patches directory and applies patches with summary generation

cd /Users/sawyer/gitSync/gpt-cursor-runner

# Create logs directory if it doesn't exist
mkdir -p logs

# Function to generate summary
generate_summary() {
    local patch_id="$1"
    local target_file="$2"
    local success="$3"
    local message="$4"
    local timestamp=$(date +"%Y%m%d_%H%M%S")
    
    cat > "summaries/summary-patch-${patch_id}-${timestamp}.md" << EOF
# Patch Application Summary

**Date:** $(date +"%Y-%m-%d %H:%M:%S")  
**Patch ID:** ${patch_id}  
**Target File:** ${target_file}  
**Status:** ${success}  

## Patch Details

- **Patch ID:** ${patch_id}
- **Target File:** ${target_file}
- **Success:** ${success}
- **Message:** ${message}
- **Timestamp:** $(date -u +"%Y-%m-%dT%H:%M:%SZ")

## Application Result

${message}

---
*Generated by auto-apply-cursor-patches.sh*
EOF
}

# Check for new patches
if [ -d "patches" ] && [ "$(ls -A patches/*.json 2>/dev/null)" ]; then
    echo "$(date): Found patches, applying..."
    
    # Apply patches with force-root
    python3 apply_all_patches.py --force-root=/Users/sawyer/gitSync/gpt-cursor-runner > logs/auto-apply.log 2>&1
    
    # Archive completed patches
    ./scripts/archive-completed-patches.sh >> logs/auto-apply.log 2>&1
    
    # Check patch log for results
    if [ -f "patch-log.json" ]; then
        # Extract latest patch result
        latest_result=$(tail -1 patch-log.json 2>/dev/null | jq -r '.entries[-1] // empty')
        if [ -n "$latest_result" ]; then
            patch_id=$(echo "$latest_result" | jq -r '.patch_id // "unknown"')
            target_file=$(echo "$latest_result" | jq -r '.target_file // "unknown"')
            success=$(echo "$latest_result" | jq -r '.success // false')
            message=$(echo "$latest_result" | jq -r '.message // "No message"')
            
            # Generate summary
            generate_summary "$patch_id" "$target_file" "$success" "$message"
            
            echo "$(date): Patch $patch_id applied with status: $success"
        fi
    fi
else
    echo "$(date): No new patches found"
fi

echo "$(date): Auto-apply cursor patches check completed" 